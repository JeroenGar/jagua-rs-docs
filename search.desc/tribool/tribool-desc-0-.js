searchState.loadedDescShard("tribool", 0, "Three-valued / Three-state logic\nFalse value\nUnknown/Indeterminate value\nError result of <code>bool::try_from(TriBool::Indeterminate)</code>\nThree-state Boolean logic\nTruth value\nLogical conjunction\nConstruct a new non-indeterminate Tribool from a regular …\nCompares two Tribools similarly to a <code>bool</code>, where <code>true</code> is …\nChecks for equality of two <code>Tribool</code>s, returning …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> only if <code>self</code> is <code>False</code>\nReturns <code>true</code> only if <code>self</code> is <code>Indeterminate</code>\nReturns <code>true</code> only if <code>self</code> is <code>True</code>\nMaterial implication using Kleene Logic.\nMaterial implication using Łukasiewicz Logic\nLogical negation\nChecks for inequality of two <code>Tribool</code>s, returning …\nLogical disjunction\nLogical exclusive disjunction")