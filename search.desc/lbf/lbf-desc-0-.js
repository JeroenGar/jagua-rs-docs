searchState.loadedDescShard("lbf", 0, "Returns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nDraw the hazard proximity grid on top\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDraw the quadtree on top\nDraw the fail fast surrogate on top of each item\nThe theme to use for the svg\nConfiguration for the LBF optimizer\nConfiguration of the Collision Detection Engine\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nFraction of <code>n_samples_per_item</code> used for the local search …\nTotal budget of samples per item per layout\nMax deviation from the original polygon area as a …\nSeed for the PRNG. If undefined, the algorithm will run in …\nOptional SVG drawing options\nThe cost LBF assigned to a placing option. Weighted sum of …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSmallRng is a fast, non-cryptographic PRNG …\nCreates <code>Transformation</code> samples for a given item. Samples …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSamples a <code>Transformation</code>\nRemoves all cells that cannot possibly generate a …\nCreates <code>Transformation</code> samples for a given item. The …\nThe stddev of rotation starts at 2° and ends at 0.5°.\nThe stddev of translation starts at 1% and ends at 0.05% …\nAdjusts the standard deviation according to the fraction …\nReturns the argument unchanged.\nCreates a new sampler with default standard deviation …\nCalls <code>U::from(self)</code>.\nSamples a transformation from the distribution.\nSets the standard deviation of the normal distributions.\nShifts the mean of the normal distributions to the given …\nSamples a rotation from a normal distribution over a given …\nSamples a rotation (radians).\nSamples a rotation from a uniform distribution over a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSamples a <code>DTransformation</code> from a uniform distribution over …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")